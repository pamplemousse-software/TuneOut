<common:LayoutAwarePage
	x:Name="page"
	x:Class="TuneOut.MainPage"
	DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="using:TuneOut"
	xmlns:common="using:TuneOut.Common"
	xmlns:audio="using:TuneOut.Audio"
	xmlns:callisto="using:Callisto.Controls"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d" Loaded="page_Loaded">

	<Page.Resources>
		<local:AudioControllerProxy x:Name="ACProxy" />
		<CollectionViewSource x:Name="albumsSource" Source="{Binding CurrentFolder}" />
		<CollectionViewSource x:Name="tracksSource" Source="{Binding CurrentSelection.TrackListNumbered}" />
		<CollectionViewSource x:Name="queueSource" Source="{Binding Controller.UpcomingTracks, Source={StaticResource ACProxy}}" />
		<common:BooleanToVisibilityConverter x:Name="BTVConverter" />
		<common:TimeSpanToStringConverter x:Name="TSConverter" />
		<common:TimeSpanToDoubleConverter x:Name="TDConverter" />
		<common:TimeDoubleToTimeStringConverter x:Name="TDSConverter" />
		<common:BooleanNegationConverter x:Name="BNConverter" />
		<common:ZeroToVisibilityConverter x:Name="ZTVConverter" />
	</Page.Resources>

	<Grid>
		<Grid x:Name="mainGrid" Style="{StaticResource LayoutRootStyle}">
			<Grid.Background>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FF0F0F0F" />
					<GradientStop Color="#FF4B4B4B" Offset="1" />
				</LinearGradientBrush>
			</Grid.Background>
			
			<Grid.RowDefinitions>
				<RowDefinition Height="140"/>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>

			<Grid Canvas.ZIndex="1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>
				<RadioButton x:Name="navigateToAlbumsButton" GroupName="headerGroup" Grid.Column="0" Margin="120,0,30,40" Style="{StaticResource HeaderRadioButtonStyle}" Click="navigateToAlbumsButton_Click" x:Uid="MainPage/NavAppBar/AlbumsButton" Content="albums" />
				<RadioButton x:Name="navigateToPlaylistsButton" GroupName="headerGroup" Grid.Column="1" Margin="0,0,30,40" Style="{StaticResource HeaderRadioButtonStyle}" Click="navigateToPlaylistsButton_Click" x:Uid="MainPage/NavAppBar/PlaylistsButton" />
				<Button x:Name="navigateOpenQueueButton" x:Uid="MainPage/NavAppBar/QueueButton" Margin="0,35,45,0" Style="{StaticResource RoundButtonStyle}" Content="" Click="navigateOpenQueueButton_Click" Grid.Column="2" HorizontalAlignment="Right" Height="45" />
			</Grid>

			<GridView x:Name="albumGridView" ItemsSource="{Binding Mode=OneWay, Source={StaticResource albumsSource}}" SelectionMode="None" ItemClick="albumGridView_ItemClick" IsItemClickEnabled="True" Padding="116,137,40,46" Grid.RowSpan="2" Canvas.ZIndex="-1">
				<GridView.ItemContainerStyle>
					<Style TargetType="GridViewItem">
						<Setter Property="Margin" Value="5"/>
					</Style>
				</GridView.ItemContainerStyle>

				<GridView.ItemTemplate>
					<DataTemplate>
						<Grid HorizontalAlignment="Left" Height="160" VerticalAlignment="Top" Width="320">
							<Grid.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FFDEDEDE"/>
									<GradientStop Color="#FFCCCCCC" Offset="1"/>
								</LinearGradientBrush>
							</Grid.Background>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="160" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Image VerticalAlignment="Center" CacheMode="BitmapCache" Grid.Column="0" Width="140" Height="140" HorizontalAlignment="Center">
								<Image.Source>
									<BitmapImage UriSource="{Binding Artwork.Image}" DecodePixelWidth="140" />
								</Image.Source>
							</Image>
							<StackPanel Grid.Column="2" Margin="5,10">
								<TextBlock TextTrimming="WordEllipsis" Text="{Binding Title}" FontSize="16" FontWeight="SemiBold" Foreground="#FF111111" TextWrapping="Wrap" MaxHeight="100" />
								<TextBlock TextTrimming="WordEllipsis" Text="{Binding Subtitle}" FontSize="13" FontWeight="SemiBold" Foreground="#CC111111" TextWrapping="Wrap" MaxHeight="40" />
							</StackPanel>
						</Grid>
					</DataTemplate>
				</GridView.ItemTemplate>
			</GridView>
		</Grid>

		<Grid x:Name="albumDetailOverlay" Canvas.ZIndex="10" Visibility="Collapsed" IsHitTestVisible="False">
			<Grid.RowDefinitions>
				<RowDefinition Height="1*" />
				<RowDefinition Height="4*" />
				<RowDefinition Height="1*" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="1*" />
				<ColumnDefinition Width="4*" MinWidth="650" />
				<ColumnDefinition Width="1*" />
			</Grid.ColumnDefinitions>

			<Grid x:Name="albumDetailBlackOverlay" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4" Grid.RowSpan="3" PointerPressed="albumDetailBlackOverlay_PointerPressed" Background="{StaticResource ListViewItemOverlayBackgroundThemeBrush}" />
			<Grid Grid.Row="1" Grid.Column="1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="1*" />
					<ColumnDefinition Width="2*" />
				</Grid.ColumnDefinitions>

				<StackPanel Grid.Column="0" Background="#FFCCCCCC">
					<Image Source="{Binding CurrentSelection.Artwork.Image}" Margin="15" />
					<Button x:Name="playAllButton" x:Uid="MainPage/PlayWholeAlbumButton" Margin="15,5" Style="{StaticResource RoundButtonStyleLight}" Content="" AutomationProperties.Name="Play all" Click="playAllButton_Click" />
					<Button x:Name="shuffleAllButton" x:Uid="MainPage/ShuffleWholeAlbumButton" Margin="15,5" Style="{StaticResource RoundButtonStyleLight}" Content="" AutomationProperties.Name="Shuffle all" Click="shuffleAllButton_Click" />
					<Button x:Name="queueAllButton" x:Uid="MainPage/QueueWholeAlbumButton" Margin="15,5" Style="{StaticResource RoundButtonStyleLight}" Content="" AutomationProperties.Name="Add to queue" Click="queueAllButton_Click" />
				</StackPanel>

				<Grid Grid.Column="1" Background="#FFEEEEEE">
					<Grid.RowDefinitions>
						<RowDefinition Height="50" />
						<RowDefinition Height="35" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<TextBlock Text="{Binding CurrentSelection.Title}"  TextTrimming="WordEllipsis" FontSize="30" Foreground="Black" Margin="15,15,15,0" FontStretch="Expanded" />
					<TextBlock Text="{Binding CurrentSelection.Subtitle}" TextTrimming="WordEllipsis" FontSize="14" FontWeight="SemiBold" Foreground="#FF666666" Margin="15,0,15,15" FontStretch="Expanded" Grid.Row="1" />
					<ListView x:Name="albumDetailListView" Grid.Row="2" ItemsSource="{Binding Mode=OneWay, Source={StaticResource tracksSource}}" ItemContainerStyle="{StaticResource SongListViewItemStyle}" SelectionMode="Multiple" SelectionChanged="albumDetailListView_SelectionChanged">
						<ListView.ItemTemplate>
							<DataTemplate>
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="40" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="60" />
									</Grid.ColumnDefinitions>
									<TextBlock Grid.Column="0" Text="{Binding Index}" FontSize="16" Margin="10,6,0,0" TextTrimming="WordEllipsis" TextWrapping="Wrap" HorizontalAlignment="Center" Visibility="{Binding Track.IsNowPlaying, Converter={StaticResource BTVConverter}, ConverterParameter=True}" />
									<TextBlock Grid.Column="0" Text="🔊" FontSize="16" Margin="10,6,0,0" HorizontalAlignment="Center" Visibility="{Binding Track.IsNowPlaying, Converter={StaticResource BTVConverter}}" />
									<StackPanel Grid.Column ="1" Orientation="Vertical">
										<TextBlock Text="{Binding Track.Title}" FontSize="18" Margin="10,5,0,0" TextTrimming="WordEllipsis" />
										<TextBlock Text="{Binding Track.Artist}" FontSize="13" Margin="10,0,0,0" TextTrimming="WordEllipsis" FontWeight="SemiBold" />
										<TextBlock Text="{Binding Track.TotalTime, Converter={StaticResource TSConverter}}" FontSize="13" Margin="10,0,0,10" TextTrimming="WordEllipsis" />
									</StackPanel>
									<Button Grid.Column="2" Style="{StaticResource RoundButtonStyleLight}" Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" Tag="{Binding}" Content="" Click="albumDetailListView_ItemPlayButton_Click" HorizontalAlignment="Center" VerticalAlignment="Center" />
								</Grid>
							</DataTemplate>
						</ListView.ItemTemplate>
					</ListView>
				</Grid>
			</Grid>
		</Grid>

		<Grid x:Name="queueOverlay" Canvas.ZIndex="10" Visibility="Collapsed" IsHitTestVisible="False">
			<Grid.ColumnDefinitions>
				<ColumnDefinition x:Name="queueOverlayCol1" Width="500" />
				<ColumnDefinition x:Name="queueOverlayCol2" Width="*" />
			</Grid.ColumnDefinitions>

			<Grid x:Name="queueBlackOverlay" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Background="{StaticResource ListViewItemOverlayBackgroundThemeBrush}" PointerPressed="queueBlackOverlay_PointerPressed" />

			<Grid x:Name="queueContentsGrid" Grid.Column="0" Background="#FFEEEEEE">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>
				<Grid Margin="15,15,15,10" Height="60" Grid.Row="0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<TextBlock x:Name="queueTitleText" Grid.Column="0" x:Uid="MainPage/QueuePaneTitle" FontSize="30" Foreground="Black" FontStretch="Expanded" Margin="0,12,0,0" FontFamily="Global User Interface" />
					<Image x:Name="queueNowPlayingImage" Grid.Column="1" Source="{Binding Controller.Current.Artwork.Image, Source={StaticResource ACProxy}}" Margin="5" Visibility="Collapsed" />
					<StackPanel x:Name="queueNowPlayingTextArea" Grid.Column="2" Orientation="Vertical" Height="50" Visibility="Collapsed">
						<TextBlock Text="{Binding Controller.Current.Title, Source={StaticResource ACProxy}}" FontSize="18" Margin="10,5,0,0" TextTrimming="WordEllipsis" Foreground="Black" />
						<TextBlock Text="{Binding Controller.Current.Artist, Source={StaticResource ACProxy}}" FontSize="13" Margin="10,0,0,0" TextTrimming="WordEllipsis" FontWeight="SemiBold" Foreground="Black" />
					</StackPanel>
				</Grid>
				<ListView x:Name="queueListView" Grid.Row="1" ItemsSource="{Binding Mode=OneWay, Source={StaticResource queueSource}}" ItemContainerStyle="{StaticResource SongListViewItemStyle}" SelectionMode="Multiple" Margin="0,4,0,0" SelectionChanged="queueListView_SelectionChanged">
					<ListView.ItemTemplate>
						<DataTemplate>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="60" />
								</Grid.ColumnDefinitions>
								<StackPanel Grid.Column ="0" Orientation="Vertical">
									<TextBlock Text="{Binding Track.Title}" FontSize="18" Margin="10,5,0,0" TextTrimming="WordEllipsis" />
									<TextBlock Text="{Binding Track.Artist}" FontSize="13" Margin="10,0,0,0" TextTrimming="WordEllipsis" FontWeight="SemiBold" />
								</StackPanel>
								<Button Grid.Column="1" Style="{StaticResource RoundButtonStyleLight}" Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" Tag="{Binding}" Content="" Margin="0,5,10,5" Click="queueListView_ItemPlayButton_Click" HorizontalAlignment="Center" VerticalAlignment="Center" />
							</Grid>
						</DataTemplate>
					</ListView.ItemTemplate>
				</ListView>
				<Border Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding Controller.UpcomingTracks.Count, Source={StaticResource ACProxy}, Converter={StaticResource ZTVConverter}}" Background="{StaticResource ApplicationPageBackgroundThemeBrush}" CornerRadius="20" Padding="20,10">
					<TextBlock x:Uid="MainPage/QueuePaneEmptyText" FontSize="16" FontWeight="SemiBold" />
				</Border>
			</Grid>
		</Grid>

		<Grid x:Name="messageBar" Canvas.ZIndex="100" Visibility="Collapsed">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>
			<Border Background="#FFE21F26" Grid.ColumnSpan="2" BorderThickness="0,0,0,5" BorderBrush="#7FE21F26" />
			<TextBlock x:Name="messageText" Text="An error was encountered while..." Margin="20,20,20,25" Style="{StaticResource BasicTextStyle}" />
			<Button x:Name="messageClearButton" x:Uid="MainPage/AudioError/OKButton" Content="OK" Grid.Column="1" Margin="0,0,20,5" Click="messageClearButton_Click" />
		</Grid>

		<Grid x:Name="hiddenControls" Visibility="Collapsed">
			<StackPanel x:Name="volumeControls">
				<local:AppBarToggleButton x:Name="MuteButton" AutoToggle="True" Style="{StaticResource FlyoutUnmutedSymbolButton}" CheckedStyle="{StaticResource FlyoutMutedSymbolButton}" HorizontalAlignment="Center" IsChecked="{Binding Controller.IsMuted, Source={StaticResource ACProxy}, Mode=TwoWay}" />
				<Slider HorizontalAlignment="Center" VerticalAlignment="Top" Value="{Binding Controller.Volume, Source={StaticResource ACProxy}, Mode=TwoWay}" IsEnabled="{Binding Controller.IsMuted, Source={StaticResource ACProxy}, Converter={StaticResource BNConverter}}" Orientation="Vertical" Height="200" Margin="10" Style="{StaticResource SliderLight}" />
			</StackPanel>
		</Grid>

		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="AppBarSelectionStates">
				<VisualState x:Name="NoSelection" />
				<VisualState x:Name="SelectionQueue">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="clearQueueSelectionButton">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="deleteSelectionFromQueueButton">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="nowPlayingImage">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="nowPlayingTextArea">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="seekerPositionText">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="seekerSlider">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="seekerDurationText">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="SelectionAlbum">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="clearAlbumSelectionButton">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="addSelectionToQueueButton">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="seekerDurationText">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="seekerSlider">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="seekerPositionText">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="nowPlayingImage">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="nowPlayingTextArea">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>

			<VisualStateGroup x:Name="PlayStates">
				<VisualState x:Name="NotPlaying" />
				<VisualState x:Name="Playing">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="queueTitleText">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="skipBackButton">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<x:Boolean>True</x:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="skipAheadButton">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<x:Boolean>True</x:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="queueNowPlayingImage">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="queueNowPlayingTextArea">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="bottomAppBar_Seeker" d:IsOptimized="True" />
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="bottomAppBar_NowPlaying" d:IsOptimized="True" />
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(AppBarToggleButton.IsChecked)" Storyboard.TargetName="playButton">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<x:Boolean>True</x:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="Paused">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="queueTitleText">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="skipBackButton">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<x:Boolean>True</x:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="skipAheadButton">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<x:Boolean>True</x:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="queueNowPlayingImage">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="queueNowPlayingTextArea">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="bottomAppBar_NowPlaying" d:IsOptimized="True" />
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="bottomAppBar_Seeker" d:IsOptimized="True" />
					</Storyboard>
				</VisualState>
			</VisualStateGroup>

			<!-- Visual states reflect the application's view state -->
			<VisualStateGroup x:Name="ApplicationViewStates">
				<VisualState x:Name="FullScreenLandscape" />
				<VisualState x:Name="Filled" />

				<!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
				<VisualState x:Name="FullScreenPortrait" />

				<!-- The back button and title have different styles when snapped -->
				<VisualState x:Name="Snapped">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="queueOverlayCol1">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<x:String>*</x:String>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="queueOverlayCol2">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<x:String>0</x:String>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="bottomAppBar_NowPlaying">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="bottomAppBar_Seeker">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="bottomAppBar_RightCommands">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<x:Int32>0</x:Int32>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="bottomAppBar_RightCommands">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<x:Int32>3</x:Int32>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="bottomAppBar_LeftCommands">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="OverlayQueueStates">
				<VisualState x:Name="NoOverlayQueue">
					<Storyboard>
						<FadeOutThemeAnimation TargetName="queueOverlay" />
						<PopOutThemeAnimation TargetName="queueContentsGrid" />
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="queueOverlay">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="OverlayQueue">
					<Storyboard AutoReverse="False">
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="queueOverlay">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<x:Boolean>True</x:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<FadeInThemeAnimation TargetName="queueOverlay" />
						<PopInThemeAnimation TargetName="queueContentsGrid" FromHorizontalOffset="-300" />
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Selector.SelectedIndex)" Storyboard.TargetName="queueListView">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<x:Int32>-1</x:Int32>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="queueOverlay">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="OverlayAlbumDetailStates">
				<VisualState x:Name="NoOverlayAlbum">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="albumDetailOverlay">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<FadeOutThemeAnimation TargetName="albumDetailOverlay"/>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="OverlayAlbum">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="albumDetailOverlay">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="albumDetailOverlay">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<x:Boolean>True</x:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<FadeInThemeAnimation TargetName="albumDetailOverlay"/>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="OverlayMessageStates">
				<VisualState x:Name="NoOverlayMessage">
					<Storyboard>
						<PopOutThemeAnimation TargetName="messageBar"/>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="messageBar">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<x:Boolean>False</x:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="OverlayMessage">
					<Storyboard>
						<PopInThemeAnimation TargetName="messageBar" FromHorizontalOffset="0" FromVerticalOffset="-100"/>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
	</Grid>

	<Page.BottomAppBar>
		<AppBar x:Name="bottomAppBar" Loaded="BottomAppBar_Loaded" Unloaded="BottomAppBar_Unloaded" BorderBrush="#E5111111">
			<AppBar.Background>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#E5111111" />
					<GradientStop Color="#FF000000" Offset="1" />
				</LinearGradientBrush>
			</AppBar.Background>
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<StackPanel x:Name="bottomAppBar_LeftCommands" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
					<Button x:Name="addSelectionToQueueButton" x:Uid="MainPage/CmdAppBar/AddToQueueButton" Style="{StaticResource AddAppBarButtonStyle}" Visibility="Collapsed" Click="addSelectionToQueueButton_Click" />
					<Button x:Name="deleteSelectionFromQueueButton" x:Uid="MainPage/CmdAppBar/DeleteFromQueueButton" Style="{StaticResource DiscardAppBarButtonStyle}" Visibility="Collapsed" Click="deleteSelectionFromQueueButton_Click" />
					<Button x:Name="clearAlbumSelectionButton" x:Uid="MainPage/CmdAppBar/ClearAlbumSelectionButton" Style="{StaticResource ClearSelectionAppBarButtonStyle}" Visibility="Collapsed" Click="clearAlbumSelectionButton_Click" />
					<Button x:Name="clearQueueSelectionButton" x:Uid="MainPage/CmdAppBar/ClearQueueSelectionButton" Style="{StaticResource ClearSelectionAppBarButtonStyle}" Visibility="Collapsed" Click="clearQueueSelectionButton_Click" />
				</StackPanel>
				<Grid x:Name="bottomAppBar_NowPlaying" Grid.Column="0" Opacity="0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<Image x:Name="nowPlayingImage" Grid.Column="0" Height="90" Source="{Binding Controller.Current.Artwork.Image, Source={StaticResource ACProxy}}" Margin="10,5" Width="90" />
					<StackPanel x:Name="nowPlayingTextArea" Grid.Column="1" Orientation="Vertical" VerticalAlignment="Top" Margin="5,20,5,0">
						<TextBlock Text="{Binding Controller.Current.Title, Source={StaticResource ACProxy}}" TextTrimming="WordEllipsis" FontSize="18" />
						<TextBlock Text="{Binding Controller.Current.Album, Source={StaticResource ACProxy}}" TextTrimming="WordEllipsis" FontSize="13" FontWeight="SemiBold" />
						<TextBlock Text="{Binding Controller.Current.Artist, Source={StaticResource ACProxy}}" TextTrimming="WordEllipsis" FontSize="13" FontWeight="SemiBold" />
					</StackPanel>
				</Grid>
				<Grid x:Name="bottomAppBar_Seeker" Grid.Column="1" Margin="20,0" Opacity="0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<TextBlock x:Name="seekerPositionText" Grid.Column="0" Text="{Binding Controller.Position, Converter={StaticResource TSConverter}, Source={StaticResource ACProxy}}" FontSize="13" VerticalAlignment="Top" Margin="10,58,10,0" FontWeight="SemiBold" HorizontalAlignment="Left" />
					<Slider x:Name="seekerSlider" Grid.Column="0" Grid.ColumnSpan="3" Margin="10,8" Height="45" Maximum="{Binding Controller.Current.TotalTime, Source={StaticResource ACProxy}, Converter={StaticResource TDConverter}}" Value="{Binding Controller.Position, Source={StaticResource ACProxy}, Converter={StaticResource TDConverter}, Mode=TwoWay}" ThumbToolTipValueConverter="{StaticResource TDSConverter}" VerticalAlignment="Top" />
					<TextBlock x:Name="seekerDurationText" Grid.Column="2" Text="{Binding Controller.Current.TotalTime, Converter={StaticResource TSConverter}, Source={StaticResource ACProxy}}" FontSize="13" VerticalAlignment="Top" Margin="10,58,10,0" FontWeight="SemiBold" HorizontalAlignment="Right" />
				</Grid>
				<StackPanel x:Name="bottomAppBar_RightCommands" Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Center">
					<Button x:Name="skipBackButton" x:Uid="MainPage/RewindButton" Style="{StaticResource SkipBackAppBarButtonStyle}" IsEnabled="False" Click="skipBackButton_Click" />
					<local:AppBarToggleButton x:Name="playButton" x:Uid="MainPage/PlayButton" Style="{StaticResource PlayAppBarButtonStyle}" CheckedStyle="{StaticResource PauseAppBarButtonStyle}" Click="playButton_Click" />
					<Button x:Name="skipAheadButton" x:Uid="MainPage/SkipButton" Style="{StaticResource SkipAheadAppBarButtonStyle}" IsEnabled="False" Click="skipAheadButton_Click" />
					<local:AppBarToggleButton x:Name="volumeButton" Style="{StaticResource VolumeAppBarButtonStyle}" CheckedStyle="{StaticResource MuteAppBarButtonStyle}" AutomationProperties.Name="{Binding VolumeDisplayLabel, Source={StaticResource ACProxy}}" Click="volumeButton_Click" />
				</StackPanel>
			</Grid>
		</AppBar>
	</Page.BottomAppBar>
</common:LayoutAwarePage>