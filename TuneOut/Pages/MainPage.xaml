<common:LayoutAwarePage
    x:Name="page"
    x:Class="TuneOut.MainPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TuneOut"
    xmlns:common="using:TuneOut.Common"
    xmlns:audio="using:TuneOut.Audio"
    xmlns:callisto="using:Callisto.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d" Loaded="page_Loaded">

    <Page.Resources>
        <local:AudioControllerProxy x:Name="ACProxy" />
        <CollectionViewSource x:Name="AlbumSource" Source="{Binding CurrentFolder}" />
        <CollectionViewSource x:Name="SongSource" Source="{Binding CurrentSelection.TrackListNumbered}" />
        <CollectionViewSource x:Name="QueueSource" Source="{Binding Controller.UpcomingTracks, Source={StaticResource ACProxy}}" />
        <common:BooleanToVisibilityConverter x:Name="BTVConverter" />
        <common:TimeSpanToStringConverter x:Name="TSConverter" />
        <common:TimeSpanToDoubleConverter x:Name="TDConverter" />
        <common:TimeDoubleToTimeStringConverter x:Name="TDSConverter" />
        <common:BooleanNegationConverter x:Name="BNConverter" />
    </Page.Resources>

    <Grid x:Name="MainGrid">
        <Grid.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF0F0F0F"/>
                <GradientStop Color="#FF4B4B4B" Offset="1"/>
            </LinearGradientBrush>
        </Grid.Background>

        <GridView x:Name="AlbumViewer" ItemsSource="{Binding Mode=OneWay, Source={StaticResource AlbumSource}}" SelectionMode="None" Grid.Row="1" ItemClick="AlbumViewer_ItemClick" IsItemClickEnabled="True" Padding="30">
            <GridView.ItemTemplate>
                <DataTemplate>
                    <Grid HorizontalAlignment="Left" Height="220" VerticalAlignment="Top" Width="220">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="50"/>
                        </Grid.RowDefinitions>
                        <Image Height="220" Width="220" VerticalAlignment="Center" CacheMode="BitmapCache" Grid.RowSpan="3">
                            <Image.Source>
                                <BitmapImage UriSource="{Binding Artwork.Image}" DecodePixelWidth="220" />
                            </Image.Source>
                        </Image>
                        <StackPanel Background="{StaticResource ListViewItemOverlayBackgroundThemeBrush}" Grid.Row="1">
                            <TextBlock TextTrimming="WordEllipsis" Text="{Binding Title}" FontSize="16" FontWeight="SemiBold" Foreground="{StaticResource ListViewItemOverlayForegroundThemeBrush}" Margin="5,3,5,0"></TextBlock>
                            <TextBlock TextTrimming="WordEllipsis" Text="{Binding Subtitle}" FontSize="13" FontWeight="SemiBold" Foreground="{StaticResource ListViewItemOverlayForegroundThemeBrush}" Margin="5,0,5,3"></TextBlock>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </GridView.ItemTemplate>
        </GridView>

        <Grid x:Name="SingleAlbumOverlay" Canvas.ZIndex="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="4*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="4*" MinWidth="650"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>

            <Grid x:Name="ClickCatcher" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4" Grid.RowSpan="3" PointerPressed="ClickCatcher_PointerPressed" Background="{StaticResource ListViewItemOverlayBackgroundThemeBrush}" />
            <Grid Grid.Row="1" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Background="#FFCCCCCC">
                    <Image x:Name="SelectedAlbumImage" Source="{Binding CurrentSelection.Artwork.Image}" Margin="15"/>
                    <Button x:Name="PlayWholeAlbumButton" x:Uid="MainPage/PlayWholeAlbumButton" Margin="15,5" Style="{StaticResource RoundButtonStyle}" Content="" AutomationProperties.Name="Play all" Click="PlayWholeAlbumButton_Click"/>
                    <Button x:Name="ShuffleWholeAlbumButton" x:Uid="MainPage/ShuffleWholeAlbumButton" Margin="15,5" Style="{StaticResource RoundButtonStyle}" Content="" AutomationProperties.Name="Shuffle all" Click="ShuffleWholeAlbumButton_Click"/>
                    <Button x:Name="QueueWholeAlbumButton" x:Uid="MainPage/QueueWholeAlbumButton" Margin="15,5" Style="{StaticResource RoundButtonStyle}" Content="" AutomationProperties.Name="Add to queue" Click="QueueWholeAlbumButton_Click"/>
                </StackPanel>

                <Grid Grid.Column="1" Background="#FFEEEEEE">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock x:Name="SelectedAlbumTitle" Text="{Binding CurrentSelection.Title}"  TextTrimming="WordEllipsis" FontSize="30" Foreground="Black" Margin="15,15,15,0" FontStretch="Expanded" />
                    <TextBlock x:Name="SelectedAlbumArtist" Text="{Binding CurrentSelection.Subtitle}" TextTrimming="WordEllipsis" FontSize="14" FontWeight="SemiBold" Foreground="#FF666666" Margin="15,0,15,15" FontStretch="Expanded" Grid.Row="1" />
                    <ListView x:Name="SelectedAlbumTracks" Grid.Row="2" ItemsSource="{Binding Mode=OneWay, Source={StaticResource SongSource}}" ItemContainerStyle="{StaticResource SongListViewItemStyle}" SelectionMode="Multiple" SelectionChanged="SelectedAlbumTracks_SelectionChanged">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="40"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="60"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="{Binding Index}" FontSize="16" Margin="10,6,0,0" TextTrimming="WordEllipsis" TextWrapping="Wrap" HorizontalAlignment="Center" Visibility="{Binding Track.IsNowPlaying, Converter={StaticResource BTVConverter}, ConverterParameter=True}"/>
                                    <TextBlock Grid.Column="0" Text="🔊" FontSize="16" Margin="10,6,0,0" HorizontalAlignment="Center" Visibility="{Binding Track.IsNowPlaying, Converter={StaticResource BTVConverter}}"/>
                                    <StackPanel Grid.Column ="1" Orientation="Vertical">
                                        <TextBlock Text="{Binding Track.Title}" FontSize="18" Margin="10,5,0,0" TextTrimming="WordEllipsis"/>
                                        <TextBlock Text="{Binding Track.Artist}" FontSize="13" Margin="10,0,0,0" TextTrimming="WordEllipsis" FontWeight="SemiBold"/>
                                        <TextBlock Text="{Binding Track.TotalTime, Converter={StaticResource TSConverter}}" FontSize="13" Margin="10,0,0,10" TextTrimming="WordEllipsis"/>
                                    </StackPanel>
                                    <Button Grid.Column="2" Style="{StaticResource RoundButtonStyle}" Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" Tag="{Binding}" Content="" Click="SinglePlayButton_Click" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
            </Grid>
        </Grid>

        <Grid x:Name="QueueOverlay" Canvas.ZIndex="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="QueueOverlayCol1" Width="500" />
                <ColumnDefinition x:Name="QueueOverlayCol2" Width="*" />
            </Grid.ColumnDefinitions>

            <Grid x:Name="QueueClickCatcher" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Background="{StaticResource ListViewItemOverlayBackgroundThemeBrush}" PointerPressed="QueueClickCatcher_PointerPressed" />

            <Grid x:Name="QueueContentsGrid" Grid.Column="0" Background="#FFEEEEEE">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Margin="15,15,15,10" Height="60" Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="QueueBackButton" Grid.Column="0" Style="{StaticResource RoundButtonStyle}" Content="" Click="QueueButton_Click" />
                    <TextBlock x:Name="QueueTitle" Grid.Column="1" x:Uid="MainPage/QueuePaneTitle" FontSize="30" Foreground="Black" FontStretch="Expanded" Margin="0,12,0,0" FontFamily="Global User Interface" />
                    <Image x:Name="QueueNowPlayingImage" Grid.Column="2" Source="{Binding Controller.Current.Artwork.Image, Source={StaticResource ACProxy}}" Margin="5" Visibility="Collapsed" />
                    <StackPanel x:Name="stackPanel" Grid.Column ="3" Orientation="Vertical" Height="50" Visibility="Collapsed">
                        <TextBlock x:Name="QueueNowPlayingSong" Text="{Binding Controller.Current.Title, Source={StaticResource ACProxy}}" FontSize="18" Margin="10,5,0,0" TextTrimming="WordEllipsis" Foreground="Black"/>
                        <TextBlock x:Name="QueueNowPlayingArtist" Text="{Binding Controller.Current.Artist, Source={StaticResource ACProxy}}" FontSize="13" Margin="10,0,0,0" TextTrimming="WordEllipsis" FontWeight="SemiBold" Foreground="Black"/>
                    </StackPanel>
                </Grid>
                <ListView x:Name="QueueTracks" Grid.Row="1" ItemsSource="{Binding Mode=OneWay, Source={StaticResource QueueSource}}" ItemContainerStyle="{StaticResource SongListViewItemStyle}" SelectionMode="Multiple" Margin="0,4,0,0" SelectionChanged="QueueTracks_SelectionChanged">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="60"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column ="0" Orientation="Vertical">
                                    <TextBlock Text="{Binding Track.Title}" FontSize="18" Margin="10,5,0,0" TextTrimming="WordEllipsis"/>
                                    <TextBlock Text="{Binding Track.Artist}" FontSize="13" Margin="10,0,0,0" TextTrimming="WordEllipsis" FontWeight="SemiBold"/>
                                </StackPanel>
                                <Button Grid.Column="1" Style="{StaticResource RoundButtonStyle}" Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" Tag="{Binding}" Content="" Margin="0,5" Click="CutQueueButton_Click" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </Grid>
        
        <Rectangle x:Name="HiddenBottomEdge" VerticalAlignment="Bottom"/>

        <Grid x:Name="HiddenControls" Visibility="Collapsed">
            <StackPanel x:Name="VolumeControls">
                <local:AppBarToggleButton x:Name="MuteButton" AutoToggle="True" Style="{StaticResource FlyoutUnmutedSymbolButton}" CheckedStyle="{StaticResource FlyoutMutedSymbolButton}" HorizontalAlignment="Center" IsChecked="{Binding Controller.IsMuted, Source={StaticResource ACProxy}, Mode=TwoWay}" />
                <Slider HorizontalAlignment="Center" VerticalAlignment="Top" Value="{Binding Controller.Volume, Source={StaticResource ACProxy}, Mode=TwoWay}" IsEnabled="{Binding Controller.IsMuted, Source={StaticResource ACProxy}, Converter={StaticResource BNConverter}}" Orientation="Vertical" Height="200" Margin="10" Style="{StaticResource SliderLight}"/>
            </StackPanel>
            <StackPanel x:Name="AlertControls" Margin="10">
                <TextBlock x:Name="AlertText" Style="{StaticResource FlyoutText}"/>
                <Button x:Name="AlertButton" Style="{StaticResource FlyoutActionButton}">
                    <TextBlock x:Name="AlertButtonText"/>
                </Button>
            </StackPanel>
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AppBarSelectionStates">
                <VisualState x:Name="NoSelection"/>
                <VisualState x:Name="SelectionQueue">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ClearQueueSelectionButton" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteFromQueueButton" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NowPlayingImage">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NowPlayingText">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NowPlayingPosition">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NowPlayingSlider">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NowPlayingDuration">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectionAlbum">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ClearAlbumSelectionButton" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AddToQueueButton" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NowPlayingDuration">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NowPlayingSlider">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NowPlayingPosition">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NowPlayingImage">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NowPlayingText">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="PlayStates">
                <VisualState x:Name="NotPlaying"/>
                <VisualState x:Name="Playing">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="QueueTitle" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlayButton" Storyboard.TargetProperty="IsChecked">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RewindButton" Storyboard.TargetProperty="IsEnabled">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SkipButton" Storyboard.TargetProperty="IsEnabled">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="QueueNowPlayingImage">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="stackPanel">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NowPlayingSliderPanel" d:IsOptimized="True"/>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NowPlayingPanel" d:IsOptimized="True"/>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="PlayingPaused">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="QueueTitle" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RewindButton" Storyboard.TargetProperty="IsEnabled">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SkipButton" Storyboard.TargetProperty="IsEnabled">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="QueueNowPlayingImage">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="stackPanel">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NowPlayingPanel" d:IsOptimized="True"/>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NowPlayingSliderPanel" d:IsOptimized="True"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait"/>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="QueueOverlayCol1" Storyboard.TargetProperty="Width">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="QueueOverlayCol2" Storyboard.TargetProperty="Width">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="QueueBackButton" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LeftCommands" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="topAppBar">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>False</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="topAppBar">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NowPlayingPanel">
                        	<DiscreteObjectKeyFrame KeyTime="0">
                        		<DiscreteObjectKeyFrame.Value>
                        			<Visibility>Collapsed</Visibility>
                        		</DiscreteObjectKeyFrame.Value>
                        	</DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NowPlayingSliderPanel">
                        	<DiscreteObjectKeyFrame KeyTime="0">
                        		<DiscreteObjectKeyFrame.Value>
                        			<Visibility>Collapsed</Visibility>
                        		</DiscreteObjectKeyFrame.Value>
                        	</DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="RightCommands">
                        	<DiscreteObjectKeyFrame KeyTime="0">
                        		<DiscreteObjectKeyFrame.Value>
                        			<x:Int32>0</x:Int32>
                        		</DiscreteObjectKeyFrame.Value>
                        	</DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="RightCommands">
                        	<DiscreteObjectKeyFrame KeyTime="0">
                        		<DiscreteObjectKeyFrame.Value>
                        			<x:Int32>3</x:Int32>
                        		</DiscreteObjectKeyFrame.Value>
                        	</DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="OverlayStates">
                <VisualState x:Name="NoOverlay">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="QueueOverlay">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>False</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="SingleAlbumOverlay">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>False</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <FadeOutThemeAnimation TargetName="SingleAlbumOverlay"/>
                        <FadeOutThemeAnimation TargetName="QueueOverlay"/>
                        <PopOutThemeAnimation TargetName="QueueContentsGrid"/>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="OverlayQueue">
                    <Storyboard AutoReverse="False">
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="QueueOverlay">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>True</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="SingleAlbumOverlay">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>False</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <FadeOutThemeAnimation TargetName="SingleAlbumOverlay"/>
                        <FadeInThemeAnimation TargetName="QueueOverlay"/>
                        <PopInThemeAnimation TargetName="QueueContentsGrid" FromHorizontalOffset="-300"/>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Selector.SelectedIndex)" Storyboard.TargetName="QueueTracks">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Int32>-1</x:Int32>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="OverlayAlbum">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="QueueOverlay">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>False</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="SingleAlbumOverlay">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>True</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <FadeOutThemeAnimation TargetName="QueueOverlay"/>
                        <PopOutThemeAnimation TargetName="QueueContentsGrid"/>
                        <FadeInThemeAnimation TargetName="SingleAlbumOverlay"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="AlbumViewerStates">
                <VisualState x:Name="ViewerPreparing">
                    <Storyboard>
                        <PopOutThemeAnimation TargetName="AlbumViewer"/>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="ViewerReady">
                    <Storyboard>
                        <PopInThemeAnimation TargetName="AlbumViewer" FromHorizontalOffset="100"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

    <Page.TopAppBar>
        <AppBar x:Name="topAppBar" BorderBrush="#E5111111">
            <AppBar.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#E5111111" Offset="1"/>
                    <GradientStop Color="#FF000000"/>
                </LinearGradientBrush>
            </AppBar.Background>
            <Grid>
                <Button x:Name="QueueButton" Content="" x:Uid="MainPage/NavAppBar/QueueButton" Click="QueueButton_Click"  Margin="10,15" Style="{StaticResource NavButtonStyle}" />

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button x:Name="NavAlbums" Content="" x:Uid="MainPage/NavAppBar/AlbumsButton"  Margin="10,15,0,15" Style="{StaticResource NavButtonStyle}" Click="NavAlbums_Click" />
                    <Button x:Name="NavPlaylists" Content="" x:Uid="MainPage/NavAppBar/PlaylistsButton"  Margin="0,15,10,15" Style="{StaticResource NavButtonStyle}" Click="NavPlaylists_Click" />
                </StackPanel>
            </Grid>
        </AppBar>
    </Page.TopAppBar>

    <Page.BottomAppBar>
        <AppBar x:Name="bottomAppBar" Loaded="BottomAppBar_Loaded" Unloaded="BottomAppBar_Unloaded" BorderBrush="#E5111111">
            <AppBar.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#E5111111"/>
                    <GradientStop Color="#FF000000" Offset="1"/>
                </LinearGradientBrush>
            </AppBar.Background>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel x:Name="LeftCommands" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                    <Button x:Name="AddToQueueButton" x:Uid="MainPage/CmdAppBar/AddToQueueButton" Style="{StaticResource AddAppBarButtonStyle}" Visibility="Collapsed" Click="AddToQueueButton_Click" />
                    <Button x:Name="DeleteFromQueueButton" x:Uid="MainPage/CmdAppBar/DeleteFromQueueButton" Style="{StaticResource DiscardAppBarButtonStyle}" Visibility="Collapsed" Click="DeleteFromQueueButton_Click" />
                    <Button x:Name="ClearAlbumSelectionButton" x:Uid="MainPage/CmdAppBar/ClearAlbumSelectionButton" Style="{StaticResource ClearSelectionAppBarButtonStyle}" Visibility="Collapsed" Click="ClearAlbumSelectionButton_Click" />
                    <Button x:Name="ClearQueueSelectionButton" x:Uid="MainPage/CmdAppBar/ClearQueueSelectionButton" Style="{StaticResource ClearSelectionAppBarButtonStyle}" Visibility="Collapsed" Click="ClearQueueSelectionButton_Click" />
                </StackPanel>
                <Grid x:Name="NowPlayingPanel" Grid.Column="0" Opacity="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Image x:Name="NowPlayingImage" Grid.Column="0" Height="90" Source="{Binding Controller.Current.Artwork.Image, Source={StaticResource ACProxy}}" Margin="10,5" Width="90" />
                    <StackPanel x:Name="NowPlayingText" Grid.Column="1" Orientation="Vertical" VerticalAlignment="Top" Margin="5,20,5,0">
                        <TextBlock Text="{Binding Controller.Current.Title, Source={StaticResource ACProxy}}" TextTrimming="WordEllipsis" FontSize="18"/>
                        <TextBlock Text="{Binding Controller.Current.Album, Source={StaticResource ACProxy}}" TextTrimming="WordEllipsis" FontSize="13" FontWeight="SemiBold"/>
                        <TextBlock Text="{Binding Controller.Current.Artist, Source={StaticResource ACProxy}}" TextTrimming="WordEllipsis" FontSize="13" FontWeight="SemiBold"/>
                    </StackPanel>
                </Grid>
                <Grid x:Name="NowPlayingSliderPanel" Grid.Column="1" Margin="20,0" Opacity="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="NowPlayingPosition" Grid.Column="0" Text="{Binding Controller.Position, Converter={StaticResource TSConverter}, Source={StaticResource ACProxy}}" FontSize="13" VerticalAlignment="Top" Margin="10,58,10,0" FontWeight="SemiBold" HorizontalAlignment="Left"/>
                    <Slider x:Name="NowPlayingSlider" Grid.Column="0" Grid.ColumnSpan="3" Margin="10,8" Height="45" Maximum="{Binding Controller.Current.TotalTime, Source={StaticResource ACProxy}, Converter={StaticResource TDConverter}}" Value="{Binding Controller.Position, Source={StaticResource ACProxy}, Converter={StaticResource TDConverter}, Mode=TwoWay}" ThumbToolTipValueConverter="{StaticResource TDSConverter}" VerticalAlignment="Top"/>
                    <TextBlock x:Name="NowPlayingDuration" Grid.Column="2" Text="{Binding Controller.Current.TotalTime, Converter={StaticResource TSConverter}, Source={StaticResource ACProxy}}" FontSize="13" VerticalAlignment="Top" Margin="10,58,10,0" FontWeight="SemiBold" HorizontalAlignment="Right"/>
                </Grid>
                <StackPanel x:Name="RightCommands" Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button x:Name="RewindButton" x:Uid="MainPage/RewindButton" Style="{StaticResource SkipBackAppBarButtonStyle}" IsEnabled="False" Click="RewindButton_Click" />
                    <local:AppBarToggleButton x:Name="PlayButton" x:Uid="MainPage/PlayButton" Style="{StaticResource PlayAppBarButtonStyle}" CheckedStyle="{StaticResource PauseAppBarButtonStyle}" Click="PlayPauseButton_Pressed" />
                    <Button x:Name="SkipButton" x:Uid="MainPage/SkipButton" Style="{StaticResource SkipAheadAppBarButtonStyle}" IsEnabled="False" Click="SkipButton_Click" />
                    <local:AppBarToggleButton x:Name="VolumeButton" Style="{StaticResource VolumeAppBarButtonStyle}" CheckedStyle="{StaticResource MuteAppBarButtonStyle}" AutomationProperties.Name="{Binding VolumeDisplayLabel, Source={StaticResource ACProxy}}" Click="VolumeButton_Click" />
                </StackPanel>
            </Grid>
        </AppBar>
    </Page.BottomAppBar>
</common:LayoutAwarePage>
